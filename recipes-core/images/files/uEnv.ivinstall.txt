#
# U-Boot environment for ivinstall JTAG boot
#
# Memory layout is critical, amd must match addresses from the ivinstall
# script.
#
# The ivinstall image is stored above the memory used by Linux (via mem=xxx).
# But unfortunately on arm, U-Boot by default assumes that it can relocate the
# initrd/fdt to high memory.  This conflicts with Linux, which expects the
# initrd/fdt addresses to be within it's addressable memory.  Therefore, the
# initrd_high/fdt_high parameters are used to relocate those images to an
# allowable area.  This must be within the Linux memory set with kernel_mem_mb.
#
# set_fdt_chosen configures a script that is run at boot to pull the ivinstall
# image out of memory and run it.  It uses a function to extract() the images
# from a RAM that includes a 3 word header.  See ivinstall script for more
# info.
#
fdt_addr=0x700000
kernel_addr=0x800000
initrd_addr=0x8000000
initrd_high=0x17f00000
fdt_high=0x18000000
kernel_mem_mb=384
startup_script_addr=0x18000000
initrd_script_addr=0x18100000
bootenv_cmd=run defargs set_fdt_chosen boot_kernel
defargs=setenv bootargs console=ttyPS0,115200n8 rw earlycon mem=${kernel_mem_mb}M
boot_kernel=\
    echo Booting kernel...; \
    if test ${board} = zynq; then \
        setenv kernel_bootcmd bootm; \
    else \
        setenv kernel_bootcmd booti; \
    fi; \
    ${kernel_bootcmd} ${kernel_addr} ${initrd_addr} ${fdt_addr}
set_fdt_chosen=\
    fdt addr ${fdt_addr}; \
    fdt set /chosen startup "\
        extract() { \
            LEN=$((0x$(bdevmem $1 12 | \
                dd skip=1 bs=4 count=1 status=none | od -An -tx4 | sed s/[[:space:]]//g))); \
            bdevmem $1 $((LEN+12)) | \
                dd skip=12 iflag=skip_bytes bs=1M status=none >$2; \
        }; \
        echo Extracting ivinstall script...; \
        extract ${startup_script_addr} /tmp/startup; \
        extract ${initrd_script_addr} /tmp/ivinstall; \
        source /tmp/startup; \
        "
